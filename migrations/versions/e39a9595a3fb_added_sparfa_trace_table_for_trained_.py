"""added sparfa trace table for trained model data

Revision ID: e39a9595a3fb
Revises: dcd6ac673a42
Create Date: 2017-01-27 13:49:59.966351

"""
from alembic import op
import numpy as np
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e39a9595a3fb'
down_revision = 'dcd6ac673a42'
branch_labels = None
depends_on = None

sparfa_table = sa.table('sparfa_trace',
                        sa.column('id', sa.PickleType),
                        sa.column('H', sa.PickleType),
                        sa.column('d', sa.PickleType),
                        sa.column('wmu', sa.PickleType),
                        sa.column('Gamma', sa.PickleType),
                        sa.column('question_ids', sa.PickleType)
                        )


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sparfa_trace',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('H', sa.PickleType(),
                              nullable=False),
                    sa.Column('d', sa.PickleType(),
                              nullable=False),
                    sa.Column('wmu', sa.PickleType(),
                              nullable=False),
                    sa.Column('Gamma', sa.PickleType(),
                              nullable=False),
                    sa.Column('question_ids', sa.PickleType(),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    ### end Alembic commands ###

    raw_data = np.load('/var/www/openstax-p3-exp-4/digital_logic/alg/P3Code/P3next.npy',
                       encoding='latin1')

    row_item = dict(H=raw_data[0].tobytes(),
             d=raw_data[1].tobytes(),
             wmu=raw_data[2].tobytes(),
             Gamma=raw_data[3].tobytes(),
             question_ids=raw_data[4].tobytes())

    import_data = []
    import_data.append(row_item)


    op.bulk_insert(sparfa_table, import_data)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sparfa_trace')
    # ### end Alembic commands ###
